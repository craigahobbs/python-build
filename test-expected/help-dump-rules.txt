build/venv/python-3-X.build:
ifeq '$(NO_DOCKER)' ''
	if [ "$$(docker images -q python:3.X)" = "" ]; then docker pull -q python:3.X; fi
endif
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X python3 -m venv build/venv/python-3-X
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -U pip setuptools
ifeq 'python:3.X' 'python:3.X'
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -e . $(TESTS_REQUIRE) build simple-git-changelog twine wheel coverage=="$(COVERAGE_VERSION)" pylint=="$(PYLINT_VERSION)" sphinx=="$(SPHINX_VERSION)"
else
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -e . $(TESTS_REQUIRE)
endif
	touch $@

build/venv/python-3-Y.build:
ifeq '$(NO_DOCKER)' ''
	if [ "$$(docker images -q python:3.Y)" = "" ]; then docker pull -q python:3.Y; fi
endif
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y python3 -m venv build/venv/python-3-Y
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -U pip setuptools
ifeq 'python:3.Y' 'python:3.X'
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -e . $(TESTS_REQUIRE) build simple-git-changelog twine wheel coverage=="$(COVERAGE_VERSION)" pylint=="$(PYLINT_VERSION)" sphinx=="$(SPHINX_VERSION)"
else
	docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/pip $(PIP_ARGS) install $(PIP_INSTALL_ARGS) -e . $(TESTS_REQUIRE)
endif
	touch $@

.PHONY: test-python-3-X
test-python-3-X: build/venv/python-3-X.build
ifneq '$(TEST)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m unittest $(UNITTEST_ARGS) $(TEST)
else ifneq '$(UNITTEST_PARALLEL)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/unittest-parallel -t src/ -s src/tests/ $(UNITTEST_PARALLEL_ARGS)
else
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m unittest discover -t src/ -s src/tests/ $(UNITTEST_ARGS)
endif

.PHONY: test
test: test-python-3-X

.PHONY: test-python-3-Y
test-python-3-Y: build/venv/python-3-Y.build
ifneq '$(TEST)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/python3 -m unittest $(UNITTEST_ARGS) $(TEST)
else ifneq '$(UNITTEST_PARALLEL)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/unittest-parallel -t src/ -s src/tests/ $(UNITTEST_PARALLEL_ARGS)
else
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.Y build/venv/python-3-Y/bin/python3 -m unittest discover -t src/ -s src/tests/ $(UNITTEST_ARGS)
endif

.PHONY: test
test: test-python-3-Y

.PHONY: cover-python-3-X
cover-python-3-X: build/venv/python-3-X.build
ifneq '$(TEST)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage run --source src/ $(COVERAGE_ARGS) -m unittest $(UNITTEST_ARGS) $(TEST)
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage html -d build/coverage
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage report $(COVERAGE_REPORT_ARGS)
else ifneq '$(UNITTEST_PARALLEL)' ''
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/unittest-parallel -t src/ -s src/tests/ $(UNITTEST_PARALLEL_ARGS) --coverage-html=build/coverage $(UNITTEST_PARALLEL_COVERAGE_ARGS)
else
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage run --source src/ $(COVERAGE_ARGS) -m unittest discover -t src/ -s src/tests/ $(UNITTEST_ARGS)
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage html -d build/coverage
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m coverage report $(COVERAGE_REPORT_ARGS)
endif

.PHONY: cover
cover: cover-python-3-X

.PHONY: lint-python-3-X
lint-python-3-X: build/venv/python-3-X.build
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m pylint $(PYLINT_ARGS) src

.PHONY: lint
lint: lint-python-3-X

.PHONY: doc-python-3-X
doc-python-3-X: build/venv/python-3-X.build
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/sphinx-build $(SPHINX_ARGS) -b doctest -d build/doc/doctrees/ $(SPHINX_DOC) build/doc/doctest/
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/sphinx-build $(SPHINX_ARGS) -b html -d build/doc/doctrees/ $(SPHINX_DOC) build/doc/html/

.PHONY: doc
doc: doc-python-3-X

.PHONY: publish-python-3-X
publish-python-3-X: build/venv/python-3-X.build
	rm -rf dist/
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/python3 -m build -n
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/twine check dist/*
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/twine upload dist/*

.PHONY: publish
publish: publish-python-3-X

.PHONY: changelog-python-3-X
changelog-python-3-X: build/venv/python-3-X.build
	 docker run -i --rm -u `id -g`:`id -g` -v `pwd`:`pwd` -w `pwd` python:3.X build/venv/python-3-X/bin/simple-git-changelog

.PHONY: changelog
changelog: changelog-python-3-X

echo 'usage: make [changelog|clean|commit|cover|doc|gh-pages|lint|publish|superclean|test]'
